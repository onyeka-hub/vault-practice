apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/configuration: f90e23fc6cf4f689b5e689f8f8e6831119ffc7e1a1bd7dd6979aec530801a452
  creationTimestamp: "2023-05-02T09:31:45Z"
  generateName: mysql-
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    controller-revision-hash: mysql-749df54bc7
    helm.sh/chart: mysql-9.8.2
    statefulset.kubernetes.io/pod-name: mysql-0
  name: mysql-0
  namespace: vault
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: mysql
    uid: 2ba1c456-ac7e-4095-b099-eee3710150e8
  resourceVersion: "263453"
  uid: b15bf80d-660b-4e80-8e73-7bfc0e6bddc2
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: mysql
              app.kubernetes.io/name: mysql
          topologyKey: kubernetes.io/hostname
        weight: 1
  containers:
  - env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          key: mysql-root-password
          name: mysql
    - name: MYSQL_DATABASE
      value: my_database
    image: docker.io/bitnami/mysql:8.0.33-debian-11-r3
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/bash
        - -ec
        - |
          password_aux="${MYSQL_ROOT_PASSWORD:-}"
          if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
              password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
          fi
          mysqladmin status -uroot -p"${password_aux}"
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: mysql
    ports:
    - containerPort: 3306
      name: mysql
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/bash
        - -ec
        - |
          password_aux="${MYSQL_ROOT_PASSWORD:-}"
          if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
              password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
          fi
          mysqladmin status -uroot -p"${password_aux}"
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 1001
    startupProbe:
      exec:
        command:
        - /bin/bash
        - -ec
        - |
          password_aux="${MYSQL_ROOT_PASSWORD:-}"
          if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
              password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
          fi
          mysqladmin status -uroot -p"${password_aux}"
      failureThreshold: 10
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /bitnami/mysql
      name: data
    - mountPath: /opt/bitnami/mysql/conf/my.cnf
      name: config
      subPath: my.cnf
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-xnnc8
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: mysql-0
  nodeName: vault-worker2
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
  serviceAccount: mysql
  serviceAccountName: mysql
  subdomain: mysql
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-mysql-0
  - configMap:
      defaultMode: 420
      name: mysql
    name: config
  - name: kube-api-access-xnnc8
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-05-02T09:32:06Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-05-02T09:32:06Z"
    message: 'containers with unready status: [mysql]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-05-02T09:32:06Z"
    message: 'containers with unready status: [mysql]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-05-02T09:32:06Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://f2f7f2889fbe061ff7087feb5f082422cf17042583b4d763ac828d2fc4fea55f
    image: docker.io/bitnami/mysql:8.0.33-debian-11-r3
    imageID: docker.io/bitnami/mysql@sha256:937178c3b66a3a037d6d291ab665b71dd0040b8f48995d75d486bfaea275c495
    lastState:
      terminated:
        containerID: containerd://0da0b4c575c09afb7027325c204d7414b97eb7215d13e469aad74c4643eb3736
        exitCode: 137
        finishedAt: "2023-05-02T09:48:28Z"
        reason: Error
        startedAt: "2023-05-02T09:46:10Z"
    name: mysql
    ready: false
    restartCount: 7
    started: false
    state:
      running:
        startedAt: "2023-05-02T09:51:15Z"
  hostIP: 172.20.0.5
  phase: Running
  podIP: 10.244.1.17
  podIPs:
  - ip: 10.244.1.17
  qosClass: BestEffort
  startTime: "2023-05-02T09:32:06Z"
